"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[335],{84617:e=>{e.exports=JSON.parse('{"functions":[{"name":"CreateMap","desc":":::danger\\n    Only one map can be can exist at a time, calling this function will destroy the current map if it exists.\\n:::\\n\\nCreates a new map based on the map config specified, also requires a folder instance that stores the prefabs used for object generation.","params":[{"name":"mapConfig","desc":"","lua_type":": MapConfig"},{"name":"assetContainer","desc":"","lua_type":": Folder"}],"returns":[{"desc":"","lua_type":"DebugStats"}],"function_type":"method","yields":true,"source":{"line":272,"path":"genesis/init.lua"}},{"name":"DestroyMap","desc":"Destroys the current map.","params":[],"returns":[],"function_type":"method","yields":true,"source":{"line":308,"path":"genesis/init.lua"}}],"properties":[{"name":"UseFlatMaterials","desc":"**True** by default, if set to **false** you can apply your own material variants to the terrain.","lua_type":"boolean","source":{"line":247,"path":"genesis/init.lua"}}],"types":[{"name":"MapConfig","desc":"","fields":[{"name":"generatorConfig","lua_type":"Perlin3DConfig","desc":""},{"name":"size","lua_type":"number","desc":""},{"name":"seed","lua_type":"number | nil","desc":""}],"source":{"line":61,"path":"genesis/init.lua"}},{"name":"Perlin3DConfig","desc":"","fields":[{"name":"generator","lua_type":"\\"Perlin3D\\"","desc":""},{"name":"terrain","lua_type":"{ minDensity : number, frequency : number, verticalScale : number, outlineMinDensity : number, outlineFrequency : number, falloffStart : number, alternativeMaterialChance : number, noiseMaterialMinDensity : number, noiseMaterialFrequency : number, objectMaterialMinDensity : number, objectMaterialFrequency : number, objectProbeChance : number }","desc":""},{"name":"material","lua_type":"{ primaryMaterial : Enum.Material, alternativeMaterial : Enum.Material, noiseMaterial : Enum.Material, objectMaterial : Enum.Material, primaryMaterialColor : Color3, alternativeMaterialColor : Color3, noiseMaterialColor : Color3, objectMaterialColor : Color3 }","desc":""},{"name":"spikes","lua_type":"{ chance : number, lengthMin : number, lengthMax : number, minGap : number, width : number } | nil","desc":""},{"name":"prefabs","lua_type":"{ [string] : PrefabConfig | nil } | nil","desc":""},{"name":"objects","lua_type":"{ primaryMaterial : { ceiling : { [string] : number }, side : { [string] : number }, floor : { [string] : number } }, alternativeMaterial : { ceiling : { [string] : number }, side : { [string] : number }, floor : { [string] : number } }, objectMaterial : { ceiling : { [string] : number }, side : { [string] : number }, floor : { [string] : number } } } | nil","desc":""}],"source":{"line":78,"path":"genesis/init.lua"}},{"name":"PrefabConfig","desc":"","fields":[{"name":"clone","lua_type":"string | nil","desc":"Clone the properties of an existing config and then apply any changes, works on multiple layers"},{"name":"asset","lua_type":"string","desc":"The name of the asset to use for this prefab"},{"name":"rbxProperties","lua_type":"{ [string] : { [string] : any } | nil } | nil","desc":"Name of any child containing any property with any value"},{"name":"proximity","lua_type":"{ extraRadius : number | nil, banned : { bannedRadius : number, bannedList : { string } } | nil } | nil","desc":"Checks if the prefab is within the banned radius of any other prefab in the banned list"},{"name":"scale","lua_type":"NumberRange","desc":"Applies random scaling to prefab between the min and max values"},{"name":"randomRotation","lua_type":"boolean | nil","desc":"Applies random Y axies rotation to prefab"},{"name":"bury","lua_type":"boolean | nil","desc":"Buries prefab into the ground"},{"name":"useNormal","lua_type":"boolean | nil","desc":"Makes prefab align with the normal of the surface it is placed on"},{"name":"sound","lua_type":"{ [string] : any } | nil","desc":"Applies a sound to the prefab containing any property and any value"},{"name":"decal","lua_type":"{ faces : { Enum.NormalId }, [string] : any } | nil","desc":"Applies the decal to the specified faces with any property and any value"},{"name":"stretch","lua_type":"NumberRange | nil","desc":"Stretches the model on the Y axies between the min and max values"},{"name":"texture","lua_type":"{ otherChildren : { string } | nil, faces : { Enum.NormalId }, [string] : any } | nil","desc":"Applies a texture to the prefab on the PrimaryPart and specified otherChildren, on the specified faces with any property and any value"}],"source":{"line":173,"path":"genesis/init.lua"}},{"name":"DebugStats","desc":"","fields":[{"name":"time","lua_type":"{ prepare : number, terrain : number, spikes : number, objectPoints : number, objectPrefabs : number, objectGeneration : number, total : number }","desc":""},{"name":"total","lua_type":"{ objectProbes : number, spikeProbes : number, spikes : number, objectPoints : number, objectPrefabs : number, objects : number }","desc":""}],"source":{"line":217,"path":"genesis/init.lua"}}],"name":"Genesis","desc":"","realm":["Server"],"source":{"line":241,"path":"genesis/init.lua"}}')}}]);